// INITIALISE
@256
D=A
@0
M=D
// call Sys.init 0
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
@local
D=M
@SP
A=M
M=D
@SP
M=M+1
@argument
D=M
@SP
A=M
M=D
@SP
M=M+1
@this
D=M
@SP
A=M
M=D
@SP
M=M+1
@that
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@argument
M=D
@SP
D=M
@local
M=D
@Sys.init
0;JMP
// function Main.fibonacci 0
(Main.fibonacci)
// push argument 0
@2
D=M
@0
D=D+A
A=D
D=M
@0
A=M
M=D
@0
M=M+1
// push constant 2
@2
D=A
@0
A=M
M=D
@0
M=M+1
// lt
@0
D=M
D=D-1
A=D
D=M
A=A-1
M=M-D
D=M
M=0
@DI0
D;JGE
@0
D=M
D=D-1
D=D-1
A=D
M=M-1
(DI0)
@0
M=M-1
// if-goto IF_TRUE
@0
M=M-1
A=M
D=M
@IF_TRUE
D;JGT
// goto IF_FALSE
@IF_FALSE
0;JMP
(IF_TRUE)
// push argument 0
@2
D=M
@0
D=D+A
A=D
D=M
@0
A=M
M=D
@0
M=M+1
// return
@0
A=M
A=A-1
D=M
@R12
M=D
@1
D=M
@R15
M=D
@1
A=M
// Moving: -5 pos
A=A-1
A=A-1
A=A-1
A=A-1
A=A-1
D=M
@R14
M=D
@R12
D=M
@2
A=M
M=D
@2
D=M
D=D+1
@0
M=D
@R15
A=M
// Moving: -1 pos
A=A-1
D=M
@4
M=D
@R15
A=M
// Moving: -2 pos
A=A-1
A=A-1
D=M
@3
M=D
@R15
A=M
// Moving: -3 pos
A=A-1
A=A-1
A=A-1
D=M
@2
M=D
@R15
A=M
// Moving: -4 pos
A=A-1
A=A-1
A=A-1
A=A-1
D=M
@1
M=D
@R14
A=M
0;JMP
(IF_FALSE)
// push argument 0
@2
D=M
@0
D=D+A
A=D
D=M
@0
A=M
M=D
@0
M=M+1
// push constant 2
@2
D=A
@0
A=M
M=D
@0
M=M+1
// sub
@0
D=M
D=D-1
A=D
D=M
A=A-1
M=M-D
@0
M=M-1
// call Main.fibonacci 1
@246
D=A
@0
A=M
M=D
@0
M=M+1
@1
D=M
@0
A=M
M=D
@0
M=M+1
@2
D=M
@0
A=M
M=D
@0
M=M+1
@3
D=M
@0
A=M
M=D
@0
M=M+1
@4
D=M
@0
A=M
M=D
@0
M=M+1
@0
D=M
@6
D=D-A
@2
M=D
@0
D=M
@1
M=D
@Main.fibonacci
0;JMP
// push argument 0
@2
D=M
@0
D=D+A
A=D
D=M
@0
A=M
M=D
@0
M=M+1
// push constant 1
@1
D=A
@0
A=M
M=D
@0
M=M+1
// sub
@0
D=M
D=D-1
A=D
D=M
A=A-1
M=M-D
@0
M=M-1
// call Main.fibonacci 1
@321
D=A
@0
A=M
M=D
@0
M=M+1
@1
D=M
@0
A=M
M=D
@0
M=M+1
@2
D=M
@0
A=M
M=D
@0
M=M+1
@3
D=M
@0
A=M
M=D
@0
M=M+1
@4
D=M
@0
A=M
M=D
@0
M=M+1
@0
D=M
@6
D=D-A
@2
M=D
@0
D=M
@1
M=D
@Main.fibonacci
0;JMP
// add
@0
D=M
D=D-1
A=D
D=M
A=A-1
M=D+M
@0
M=M-1
// return
@0
A=M
A=A-1
D=M
@R12
M=D
@1
D=M
@R15
M=D
@1
A=M
// Moving: -5 pos
A=A-1
A=A-1
A=A-1
A=A-1
A=A-1
D=M
@R14
M=D
@R12
D=M
@2
A=M
M=D
@2
D=M
D=D+1
@0
M=D
@R15
A=M
// Moving: -1 pos
A=A-1
D=M
@4
M=D
@R15
A=M
// Moving: -2 pos
A=A-1
A=A-1
D=M
@3
M=D
@R15
A=M
// Moving: -3 pos
A=A-1
A=A-1
A=A-1
D=M
@2
M=D
@R15
A=M
// Moving: -4 pos
A=A-1
A=A-1
A=A-1
A=A-1
D=M
@1
M=D
@R14
A=M
0;JMP
// function Sys.init 0
(Sys.init)
// push constant 4
@4
D=A
@0
A=M
M=D
@0
M=M+1
// call Main.fibonacci 1
@448
D=A
@0
A=M
M=D
@0
M=M+1
@1
D=M
@0
A=M
M=D
@0
M=M+1
@2
D=M
@0
A=M
M=D
@0
M=M+1
@3
D=M
@0
A=M
M=D
@0
M=M+1
@4
D=M
@0
A=M
M=D
@0
M=M+1
@0
D=M
@6
D=D-A
@2
M=D
@0
D=M
@1
M=D
@Main.fibonacci
0;JMP
(WHILE)
// goto WHILE
@WHILE
0;JMP
(END)
@END
0;JMP
